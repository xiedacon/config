{
	// Place your snippets for lua here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"doc": {
		"prefix": "doc",
		"body": [
			"-- Copyright (c) ${CURRENT_YEAR}, xiedacon.",
			"\n"
		]
	},
	"doc company": {
		"prefix": "docc",
		"body": [
			"-- Copyright (c) ${CURRENT_YEAR}, Souche Inc.",
			"\n"
		]
	},
	"require": {
		"prefix": "require",
		"body": [
			"local $0 = require \"$1\"",
		]
	},
	"print": {
		"prefix": "print",
		"body": [
			"print($0)",
		]
	},
	"setmetatable": {
		"prefix": "setmetatable",
		"body": [
			"setmetatable($1, {",
			"\t$0",
			"})",
		]
	},

	"local": {
		"prefix": "local",
		"body": [
			"local $1 = $0",
		]
	},
	"if": {
		"prefix": "if",
		"body": [
			"if $1 then",
			"\t$0",
			"end"
		]
	},
	"ifnot": {
		"prefix": "ifnot",
		"body": [
			"if not $1 then",
			"\t$0",
			"end"
		]
	},
	"ifelse": {
		"prefix": "ifelse",
		"body": [
			"if $1 then",
			"\t$2",
			"else",
			"\t$0",
			"end"
		]
	},
	"ifelseif": {
		"prefix": "ifelseif",
		"body": [
			"if $1 then",
			"\t$2",
			"elseif $3 then",
			"\t$4",
			"else",
			"\t$0",
			"end"
		]
	},
	"fori": {
		"prefix": "fori",
		"body": [
			"for i = 1, $1 do",
			"\t$0",
			"end"
		]
	},
	"forinpairs": {
		"prefix": "forinpairs",
		"body": [
			"for k, v in paris($1) do",
			"\t$0",
			"end"
		]
	},
	"forinipairs": {
		"prefix": "forinipairs",
		"body": [
			"for k, v in iparis($1) do",
			"\t$0",
			"end"
		]
	},
	"while": {
		"prefix": "while",
		"body": [
			"while $1 do",
			"\t$0",
			"end"
		]
	},
	"repeat": {
		"prefix": "repeat",
		"body": [
			"repeat",
			"\t$1",
			"until $0"
		]
	},
	"function": {
		"prefix": "function",
		"body": [
			"function ($1)",
			"\t$0",
			"end"
		]
	},
	
	// openresty
	"ngxlog": {
		"prefix": "ngxlog",
		"body": [
			"ngx.log(ngx.ERR, $0)",
		]
	}
}